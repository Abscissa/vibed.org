extends layout

block defs
	- import vibe.textfilter.ddoc;
	- auto mod = modules[moduleName];

block title
	- auto title = "module " ~ moduleName;
	link(rel="stylesheet", href="#{req.rootDir}styles/api.css", type="text/css")
	
block navigation
	ul
		- foreach( mname; moduleNames )
			- auto m = modules[mname];
			li
				- if( m.kind == "package" )
					ul
						- foreach( sm; m )
							li
								- if( m.kind == "package" )
									ul
										- foreach( ssm; sm )
											li
												a(href="#{req.rootDir}api/#{m.name}.#{sm.name}.#{ssm.name}")= ssm.name
								- else
									a(href="#{req.rootDir}api/#{m.name}.#{sm.name}")= sm.name
				- else
					a(href="#{req.rootDir}api/#{m.name}")= m.name
		
block body
	
	section
		h2 Summary
		!= formatDdocComment(mod.ddoc, 2, sec => sec != "License" && sec != "Copyright" && sec != "Authors")
	
		- if( hasFunctions(mod) )
			.overviewSection
				h3 Functions
				dl
					- foreach( block; mod.members.functions )
						- string lastname;
						- foreach( f; block )
							- if( f.nestedName != lastname )
								- lastname = f.nestedName.get!string;
								dt
									a(href="###{f.name}")= f.name
								- if( "ddoc" in f )
									dd!= formatDdocComment(f.ddoc, 3, sec => sec == "$Short")
		- if( hasInterfaces(mod) )
			.overviewSection
				h3 Interfaces
				dl
					- foreach( f; interfaces(mod) )
						dt
							a(href="###{f.name}")= f.name
						- if( "ddoc" in f )
							dd!= formatDdocComment(f.ddoc, 3, sec => sec == "$Short")
		- if( hasClasses(mod) )
			.overviewSection
				h3 Classes
				dl
					- foreach( f; classes(mod) )
						dt
							a(href="###{f.name}")= f.name
						- if( "ddoc" in f )
							dd!= formatDdocComment(f.ddoc, 3, sec => sec == "$Short")
		- if( hasStructs(mod) )
			.overviewSection
				h3 Structs
				dl
					- foreach( f; structs(mod) )
						dt
							a(href="###{f.name}")= f.name
						- if( "ddoc" in f )
							dd!= formatDdocComment(f.ddoc, 3, sec => sec == "$Short")
		- if( hasEnums(mod) )
			.overviewSection
				h3 Enums
				dl
					- foreach( f; enums(mod) )
						dt
							a(href="###{f.name}")= f.name
						- if( "ddoc" in f )
							dd!= formatDdocComment(f.ddoc, 3, sec => sec == "$Short")
		- if( hasAliases(mod) )
			.overviewSection
				h3 Type aliases
				dl
					- foreach( f; aliases(mod) )
						dt
							a(href="###{f.name}")= f.name
						- if( "ddoc" in f )
							dd!= formatDdocComment(f.ddoc, 3, sec => sec == "$Short")
		.overviewSection

	
	- if( hasFunctions(mod) )		
		- foreach( block; mod.members.functions )
			section.member.function
				- string lastname;
				- foreach( f; block )
					- if( lastname != f.nestedName )
						- lastname = f.nestedName.get!string;
						a(id="#{f.nestedName}")
						h2= f.name
				
					.type
						code.prettyprint.lang-d= f["type"].text
				- if( auto pc = "ddoc" in block[0] )
					p.description!= formatDdocComment(*pc, 3)

				
	- foreach( f; interfaces(mod) )
		section.member.interface
			a(id="#{f.nestedName}")
			h2 interface #{f.name}
				- if( "interfaces" in f )
					- foreach( size_t i, intf; f.interfaces )
						|#{i == 0 ? ":" : ", "}
						- if( intf.moduleName.length )
							a(href="#{intf.moduleName}###{intf.nestedName}")= intf.name
						- else
							|= intf.name
			
			- if( auto pc = "ddoc" in f )
				p.description!= formatDdocComment(*pc, 3)

			h3 Methods
			dl
				- foreach( v; functions(f) )
					dt #{v.name} : #{v["type"].text}
					- if( auto pc = "ddoc" in v )
						dd!= formatDdocComment(*pc, 4)
				
	- foreach( f; classes(mod) )
		section.member.class
			a(id="#{f.nestedName}")
			h2 class #{f.name}
				- if( f.base.text != "Object" )
					| :
					- if( f.base.moduleName.length )
						a(href="#{f.base.moduleName}###{f.base.nestedName}")= f.base.name
					- else
						|= f.base.name
					- if( "interfaces" in f )
						- foreach( i; f.interfaces )
							|,
							- if( i.moduleName.length )
								a(href="#{i.moduleName}###{i.nestedName}")= i.name
							- else
								|= i.name
				- if( "interfaces" in f )
					- foreach( size_t idx, i; f.interfaces )
						|#{idx == 0 ? ":" : ", "}
						- if( i.moduleName.length )
							a(href="#{i.moduleName}###{i.nestedName}")= i.name
						- else
							|= i.name
			
			- if( auto pc = "ddoc" in f )
				p.description!= formatDdocComment(*pc, 3)

			- if( hasVariables(f) )
				h3 Variables
				dl
					- foreach( v; variables(f) )
						dt
							code.prettyprint.lang-d #{v["type"].text} #{v.name}
						- if( auto pc = "ddoc" in v )
							dd!= formatDdocComment(*pc, 4)
			- if( hasConstructors(f) )
				h3 Constructors
				dl
					- foreach( block; f.members.constructors )
						dt
							- string lastname;
							- foreach( f; block )
								- if( lastname != f.nestedName )
									- lastname = f.nestedName.get!string;
									a(id="#{f.nestedName}")
									h4= f.name
							
								.type
									code.prettyprint.lang-d= f["type"].text
							- if( auto pc = "ddoc" in block[0] )
								dd!= formatDdocComment(*pc, 4)
			- if( hasFunctions(f) )
				h3 Methods
				dl
					- foreach( block; f.members.functions )
						dt
							- string lastname;
							- foreach( f; block )
								- if( lastname != f.nestedName )
									- lastname = f.nestedName.get!string;
									a(id="#{f.nestedName}")
									h4= f.name
							
								.type
									code.prettyprint.lang-d= f["type"].text
							- if( auto pc = "ddoc" in block[0] )
								dd!= formatDdocComment(*pc, 4)
												
	- foreach( f; structs(mod) )
		section.member.struct
			a(id="#{f.nestedName}")
			h2 struct #{f.name}
			
			- if( auto pc = "ddoc" in f )
				p.description!= formatDdocComment(*pc, 3)

			- if( hasVariables(f) )
				h3 Variables
				dl
					- foreach( v; variables(f) )
						dt
							code.prettyprint.lang-d #{v["type"].text} #{v.name}
						- if( auto pc = "ddoc" in v )
							dd!= formatDdocComment(*pc, 4)
			- if( hasConstructors(f) )
				h3 Constructors
				dl
					- foreach( block; f.members.constructors )
						dt
							- string lastname;
							- foreach( f; block )
								- if( lastname != f.nestedName )
									- lastname = f.nestedName.get!string;
									a(id="#{f.nestedName}")
									h4= f.name
							
								.type
									code.prettyprint.lang-d= f["type"].text
							- if( auto pc = "ddoc" in block[0] )
								dd!= formatDdocComment(*pc, 4)
			- if( hasFunctions(f) )
				h3 Methods
				dl
					- foreach( block; f.members.functions )
						dt
							- string lastname;
							- foreach( f; block )
								- if( lastname != f.nestedName )
									- lastname = f.nestedName.get!string;
									a(id="#{f.nestedName}")
									h4= f.name
							
								.type
									code.prettyprint.lang-d= f["type"].text
							- if( auto pc = "ddoc" in block[0] )
								dd!= formatDdocComment(*pc, 4)


	- foreach( f; enums(mod) )
		section.member.enum
			a(id="#{f.nestedName}")
			h2 enum #{f.name}
			
			- if( auto pc = "ddoc" in f )
				p.description!= formatDdocComment(*pc, 3)
			
			h3 Members
			dl
				- foreach( m; f.members )
					dt= m.name
					- if( auto pc = "ddoc" in m )
						dd= *pc
	
	section
		!= formatDdocComment(mod.ddoc, 2, sec => sec == "Authors")
		!= formatDdocComment(mod.ddoc, 2, sec => sec == "License" || sec == "Copyright")
