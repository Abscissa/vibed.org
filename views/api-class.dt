extends layout

block defs
	- import api;
	- import std.algorithm;
	- import vibe.textfilter.ddoc;

	- auto mod = info.modules[info.moduleName];

block title
	- auto title = info.item.nestedName.get!string ~ " " ~ info.item.kind.get!string;
	link(rel="stylesheet", href="#{req.rootDir}styles/api.css", type="text/css")
	
block navigation
	ul
		- foreach( mname; info.moduleNames )
			- auto m = info.modules[mname];
			li
				- if( m.kind == "package" )
					ul
						- foreach( sm; m )
							li
								- if( m.kind == "package" )
									ul
										- foreach( ssm; sm )
											li
												a(href="#{req.rootDir}api/#{m.name}.#{sm.name}.#{ssm.name}")= ssm.name
								- else
									a(href="#{req.rootDir}api/#{m.name}.#{sm.name}")= sm.name
				- else
					a(href="#{req.rootDir}api/#{m.name}")= m.name
		
block body
	
	|!= formatDdocComment(info.item.ddoc, 2, sec => sec == "$Short" || sec == "$Long")
	
	- auto kinds = ["function", "variable"];
	- auto kindnames = ["Methods", "Fields"];

	- foreach( i, kind; kinds )
		- if( hasItemsForKind("public", kind, info.item) )
			section
				h3= kindnames[i]
				table
					col.caption
					tr
						th #{kindnames[i]} name
						th Description
					- foreach( mem; getItemsForKind("public", kind, info.item) )
						tr
							td
								a(href="#{mem.nestedName}")= mem.name
							td
								- if( auto pdd = "ddoc" in mem )
									|!= formatDdocComment(*pdd, 3, sec => sec == "$Short")

	|!= formatDdocComment(info.item.ddoc, 2, sec => sec != "$Short" && sec != "$Long")
	|!= formatDdocComment(mod.ddoc, 2, sec => sec == "Authors")
	|!= formatDdocComment(mod.ddoc, 2, sec => sec == "License" || sec == "Copyright")
