extends layout

block defs
	- import api;
	- import std.algorithm;
	- import vibe.textfilter.ddoc;

	- auto mod = info.modules[info.moduleName];

block title
	- auto title = info.item.nestedName.get!string ~ " " ~ info.item.kind.get!string;
	link(rel="stylesheet", href="#{req.rootDir}styles/api.css", type="text/css")
	
block navigation
	ul
		- foreach( mname; info.moduleNames )
			- auto m = info.modules[mname];
			li
				- if( m.kind == "package" )
					ul
						- foreach( sm; m )
							li
								- if( m.kind == "package" )
									ul
										- foreach( ssm; sm )
											li
												a(href="#{req.rootDir}api/#{m.name}.#{sm.name}.#{ssm.name}")= ssm.name
								- else
									a(href="#{req.rootDir}api/#{m.name}.#{sm.name}")= sm.name
				- else
					a(href="#{req.rootDir}api/#{m.name}")= m.name
		
block body
	
	section!= formatDdocComment(info.item.ddoc, 2, sec => sec == "$Short" || sec == "$Long")

	- auto kinds =          ["interface",        "class",         "struct",        "function", "variable", "enum",  "alias"];
	- auto kindnames =      ["Inner interfaces", "Inner classes", "Inner structs", "Methods",  "Fields",   "Enums", "Aliases"];
	- auto kindnames_sing = ["Inner interface",  "Inner class",   "Inner struct",  "Method",   "Field",    "Enum",  "Alias"];

	- foreach( i, kind; kinds )
		- if( hasItemsForKind("public", kind, info.item) )
			section
				h3= kindnames[i]
				table
					col.caption
					tr
						th #{kindnames_sing[i]} name
						th Description
					- foreach( mem; getItemGroupsForKind("public", kind, info.item) )
						tr
							td
								a(href="#{mem[0].nestedName}")= mem[0].name
							td
								- if( auto pdd = "ddoc" in mem[0] )
									|!= formatDdocComment(*pdd, 3, sec => sec == "$Short")

	- if( "base" in info.item || "interfaces" in info.item && info.item.interfaces.length > 0 )
		section
			h2 Inherits from

			ul
				- if( "base" in info.item )
					li
						code.prettyprint.lang-d!= formatType(info.item.base)
						| (base class)
				- foreach( intf; info.item.interfaces.opt!(Json[]) )
					li
						code.prettyprint.lang-d!= formatType(intf)
	
	|!= formatDdocComment(info.item.ddoc, 2, sec => sec != "$Short" && sec != "$Long")
	|!= formatDdocComment(mod.ddoc, 2, sec => sec == "Authors")
	|!= formatDdocComment(mod.ddoc, 2, sec => sec == "License" || sec == "Copyright")
